---
layout:     post
title:      "【目录】软件设计之美"
subtitle:   "作者：郑晔 来自：极客时间"
date:       2020-02-20 00:00:00
author:     "于磊"
header-img: "img/10_times_programmer_work_method/35c3207e975934a6c92443f1ec156f29.jpg"
catalog: true
tags:
    - 开言英语


---

### 脑图

![mindful_directory](/img/open_language/index.png)



### 开篇词

开篇词 | 软件设计，应对需求规模的”算法“



### 课前必读

01 | 软件设计到底是什么？

02 | 分离关注点：软件设计至关重要的第一步

03 | 可测试性：一个影响软件设计的重要因素 



### 了解一个软件的设计

04 | 三步走：如何了解一个软件的设计？

05 | Spring DI 容器：如何分析一个软件的模型？

06 | Ruby on Rails：如何分析一个软件的接口？

07 | Kafka：如何分析一个软件的实现？



### 设计一个软件-程序设计语言

08 | 语言的模型：如何打破单一语言局限，让设计更好地落地？

09 | 语言的接口：语法和程序库，软件设计的发力点

10 | 语言的实现：运行时，软件设计的地基

11 | DSL：你也可以设计一门自己的语言

加餐 | 再八卦几门语言！



### 设计一个软件-编程范式

12 | 编程范式：明明写的是 Java，为什么被人说成了C代码？

13 | 结构化编程：为什么做设计时仅有结构化编程是不够的？

14 | 面向对象之封装：怎样的封装才算是高内聚？

15 | 面向对象之继承：继承是代码服用的合理方式吗？

16 | 面向对象之多态：为什么“稀疏平常”的多态，是软件设计的大杀器？

17 | 函数式编程：不用函数式编程语言，怎么写函数式的程序？

18 | 函数式编程之组合性：函数式编程为什么如何吸引人？

19 | 函数式编程之不变性：怎样保证我的代码不会被比人破坏？





























